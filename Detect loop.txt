class Solution {
    //Function to check if the linked list has a loop.
    //detection of loop by floyd detection algorithm
    public static boolean floydCycle(Node head){
        if(head==null || head.next==null){
            return false;
        }
        Node hare =head;
        Node turtle=head;
        while(hare!=null && hare.next!=null){
         
            hare=hare.next.next;
            turtle=turtle.next;
            if(hare==turtle){
                return true;
            }
        }
        return false;
    }
    
    public static boolean detectLoop(Node head){
        // Add code here
        // Node temp=head;
        // HashMap<Node ,Integer> map=new HashMap<>();
        // while(temp!=null){
        //   if(map.containsKey(temp))
        //   {
        //       return true;
        //   }
        //     else{
        //     map.put(temp,1);
            
        //     }
        //     temp=temp.next;
        // }
        
        // return false;
        return floydCycle(head);
    }
}